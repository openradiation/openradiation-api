stages:
  - install
  - test
  - analyse
  - build
  - publish
  - deploy

variables:
  IMAGE_NAME: backend

NPM:
  stage: install
  image: node:6.9.3
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  script:
    - npm install

# Unit:
#   stage: test
#   image: node:latest
#   script:
#     - npm test
#   except:
#     refs:
#       - master

Sonar:
  extends: .sonar-publish
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    policy: pull
    paths:
      - node_modules/
  script:
    - gitlab-sonar-scanner

Preview:
  extends: .sonar-preview
  allow_failure: true
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    policy: pull
    paths:
      - node_modules/

Database:
  stage: publish
  extends: .docker-publish
  variables:
    IMAGE_NAME: backend-database
    build_context: database/
    build_args: --build-arg db_version=mysql:5.6
  only:
    refs:
      - web
    changes:
      - database/**/*

Backend:
  stage: publish
  extends: .docker-publish
  artifacts:
    name: $IMAGE_NAME-$CI_COMMIT_REF_SLUG
    paths:
      - $IMAGE_NAME-$CI_COMMIT_REF_SLUG.tar
  script:
    - echo "FROM $DOCKER_REGISTRY/$IMAGE_NAMESPACE/${IMAGE_NAME}-socle:$CI_COMMIT_REF_SLUG"
      |
      docker build --rm
      -f -
      -t $DOCKER_REGISTRY/$IMAGE_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG .
  after_script:
    - docker save --output $IMAGE_NAME-$CI_COMMIT_REF_SLUG.tar $DOCKER_REGISTRY/$IMAGE_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG
    - docker push $DOCKER_REGISTRY/$IMAGE_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG
    - docker rmi $DOCKER_REGISTRY/$IMAGE_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_SLUG

include:
  - project: 'cordon/msf-online/msf-deploy'
    ref: master
    file: '.gitlab-cd.yml'
